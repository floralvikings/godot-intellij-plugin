
package com.github.floralvikings.godotea.language.gdscript.typification.builtins.generated

import com.github.floralvikings.godotea.language.gdscript.typification.structure.*
import com.github.floralvikings.godotea.language.gdscript.typification.builtins.placeholder.*
import com.github.floralvikings.godotea.language.gdscript.typification.builtins.generated.enums.*

object GDEnvironment: GDType("Environment", {

"adjustment_brightness"(GDfloat)
"adjustment_color_correction"(GDTexture)
"adjustment_contrast"(GDfloat)
"adjustment_enabled"(GDbool)
"adjustment_saturation"(GDfloat)
"ambient_light_color"(GDColor)
"ambient_light_energy"(GDfloat)
"ambient_light_sky_contribution"(GDfloat)
"ambient_light_source"(GDAmbientSource)
"background_camera_feed_id"(GDint)
"background_canvas_max_layer"(GDint)
"background_color"(GDColor)
"background_energy_multiplier"(GDfloat)
"background_intensity"(GDfloat)
"background_mode"(GDBGMode)
"fog_aerial_perspective"(GDfloat)
"fog_density"(GDfloat)
"fog_enabled"(GDbool)
"fog_height"(GDfloat)
"fog_height_density"(GDfloat)
"fog_light_color"(GDColor)
"fog_light_energy"(GDfloat)
"fog_sky_affect"(GDfloat)
"fog_sun_scatter"(GDfloat)
"glow_blend_mode"(GDGlowBlendMode)
"glow_bloom"(GDfloat)
"glow_enabled"(GDbool)
"glow_hdr_luminance_cap"(GDfloat)
"glow_hdr_scale"(GDfloat)
"glow_hdr_threshold"(GDfloat)
"glow_intensity"(GDfloat)
"glow_levels/1"(GDfloat)
"glow_levels/2"(GDfloat)
"glow_levels/3"(GDfloat)
"glow_levels/4"(GDfloat)
"glow_levels/5"(GDfloat)
"glow_levels/6"(GDfloat)
"glow_levels/7"(GDfloat)
"glow_map"(GDTexture)
"glow_map_strength"(GDfloat)
"glow_mix"(GDfloat)
"glow_normalized"(GDbool)
"glow_strength"(GDfloat)
"reflected_light_source"(GDReflectionSource)
"sdfgi_bounce_feedback"(GDfloat)
"sdfgi_cascade0_distance"(GDfloat)
"sdfgi_cascades"(GDint)
"sdfgi_enabled"(GDbool)
"sdfgi_energy"(GDfloat)
"sdfgi_max_distance"(GDfloat)
"sdfgi_min_cell_size"(GDfloat)
"sdfgi_normal_bias"(GDfloat)
"sdfgi_probe_bias"(GDfloat)
"sdfgi_read_sky_light"(GDbool)
"sdfgi_use_occlusion"(GDbool)
"sdfgi_y_scale"(GDSDFGIYScale)
"sky"(GDSky)
"sky_custom_fov"(GDfloat)
"sky_rotation"(GDVector3)
"ssao_ao_channel_affect"(GDfloat)
"ssao_detail"(GDfloat)
"ssao_enabled"(GDbool)
"ssao_horizon"(GDfloat)
"ssao_intensity"(GDfloat)
"ssao_light_affect"(GDfloat)
"ssao_power"(GDfloat)
"ssao_radius"(GDfloat)
"ssao_sharpness"(GDfloat)
"ssil_enabled"(GDbool)
"ssil_intensity"(GDfloat)
"ssil_normal_rejection"(GDfloat)
"ssil_radius"(GDfloat)
"ssil_sharpness"(GDfloat)
"ssr_depth_tolerance"(GDfloat)
"ssr_enabled"(GDbool)
"ssr_fade_in"(GDfloat)
"ssr_fade_out"(GDfloat)
"ssr_max_steps"(GDint)
"tonemap_exposure"(GDfloat)
"tonemap_mode"(GDToneMapper)
"tonemap_white"(GDfloat)
"volumetric_fog_albedo"(GDColor)
"volumetric_fog_ambient_inject"(GDfloat)
"volumetric_fog_anisotropy"(GDfloat)
"volumetric_fog_density"(GDfloat)
"volumetric_fog_detail_spread"(GDfloat)
"volumetric_fog_emission"(GDColor)
"volumetric_fog_emission_energy"(GDfloat)
"volumetric_fog_enabled"(GDbool)
"volumetric_fog_gi_inject"(GDfloat)
"volumetric_fog_length"(GDfloat)
"volumetric_fog_sky_affect"(GDfloat)
"volumetric_fog_temporal_reprojection_amount"(GDfloat)
"volumetric_fog_temporal_reprojection_enabled"(GDbool)
constructor { }

func("get_glow_level") {
returns(GDfloat)
"idx"(GDint)
}

func("set_glow_level") {
returns(GDvoid)
"idx"(GDint)
"intensity"(GDfloat)
}
}){

}