
package com.github.floralvikings.godotea.language.gdscript.typification.builtins.generated

import com.github.floralvikings.godotea.language.gdscript.typification.structure.*
import com.github.floralvikings.godotea.language.gdscript.typification.builtins.placeholder.*
import com.github.floralvikings.godotea.language.gdscript.typification.builtins.generated.enums.*

object GDBaseMaterial3D: GDType("BaseMaterial3D", {

"albedo_color"(GDColor)
"albedo_texture"(GDTexture2D)
"albedo_texture_force_srgb"(GDbool)
"albedo_texture_msdf"(GDbool)
"alpha_antialiasing_edge"(GDfloat)
"alpha_antialiasing_mode"(GDAlphaAntiAliasing)
"alpha_hash_scale"(GDfloat)
"alpha_scissor_threshold"(GDfloat)
"anisotropy"(GDfloat)
"anisotropy_enabled"(GDbool)
"anisotropy_flowmap"(GDTexture2D)
"ao_enabled"(GDbool)
"ao_light_affect"(GDfloat)
"ao_on_uv2"(GDbool)
"ao_texture"(GDTexture2D)
"ao_texture_channel"(GDTextureChannel)
"backlight"(GDColor)
"backlight_enabled"(GDbool)
"backlight_texture"(GDTexture2D)
"billboard_keep_scale"(GDbool)
"billboard_mode"(GDBillboardMode)
"blend_mode"(GDBlendMode)
"clearcoat"(GDfloat)
"clearcoat_enabled"(GDbool)
"clearcoat_roughness"(GDfloat)
"clearcoat_texture"(GDTexture2D)
"cull_mode"(GDCullMode)
"depth_draw_mode"(GDDepthDrawMode)
"detail_albedo"(GDTexture2D)
"detail_blend_mode"(GDBlendMode)
"detail_enabled"(GDbool)
"detail_mask"(GDTexture2D)
"detail_normal"(GDTexture2D)
"detail_uv_layer"(GDDetailUV)
"diffuse_mode"(GDDiffuseMode)
"disable_ambient_light"(GDbool)
"disable_receive_shadows"(GDbool)
"distance_fade_max_distance"(GDfloat)
"distance_fade_min_distance"(GDfloat)
"distance_fade_mode"(GDDistanceFadeMode)
"emission"(GDColor)
"emission_enabled"(GDbool)
"emission_energy_multiplier"(GDfloat)
"emission_intensity"(GDfloat)
"emission_on_uv2"(GDbool)
"emission_operator"(GDEmissionOperator)
"emission_texture"(GDTexture2D)
"fixed_size"(GDbool)
"grow"(GDbool)
"grow_amount"(GDfloat)
"heightmap_deep_parallax"(GDbool)
"heightmap_enabled"(GDbool)
"heightmap_flip_binormal"(GDbool)
"heightmap_flip_tangent"(GDbool)
"heightmap_flip_texture"(GDbool)
"heightmap_max_layers"(GDint)
"heightmap_min_layers"(GDint)
"heightmap_scale"(GDfloat)
"heightmap_texture"(GDTexture2D)
"metallic"(GDfloat)
"metallic_specular"(GDfloat)
"metallic_texture"(GDTexture2D)
"metallic_texture_channel"(GDTextureChannel)
"msdf_outline_size"(GDfloat)
"msdf_pixel_range"(GDfloat)
"no_depth_test"(GDbool)
"normal_enabled"(GDbool)
"normal_scale"(GDfloat)
"normal_texture"(GDTexture2D)
"orm_texture"(GDTexture2D)
"particles_anim_h_frames"(GDint)
"particles_anim_loop"(GDbool)
"particles_anim_v_frames"(GDint)
"point_size"(GDfloat)
"proximity_fade_distance"(GDfloat)
"proximity_fade_enabled"(GDbool)
"refraction_enabled"(GDbool)
"refraction_scale"(GDfloat)
"refraction_texture"(GDTexture2D)
"refraction_texture_channel"(GDTextureChannel)
"rim"(GDfloat)
"rim_enabled"(GDbool)
"rim_texture"(GDTexture2D)
"rim_tint"(GDfloat)
"roughness"(GDfloat)
"roughness_texture"(GDTexture2D)
"roughness_texture_channel"(GDTextureChannel)
"shading_mode"(GDShadingMode)
"shadow_to_opacity"(GDbool)
"specular_mode"(GDSpecularMode)
"subsurf_scatter_enabled"(GDbool)
"subsurf_scatter_skin_mode"(GDbool)
"subsurf_scatter_strength"(GDfloat)
"subsurf_scatter_texture"(GDTexture2D)
"subsurf_scatter_transmittance_boost"(GDfloat)
"subsurf_scatter_transmittance_color"(GDColor)
"subsurf_scatter_transmittance_depth"(GDfloat)
"subsurf_scatter_transmittance_enabled"(GDbool)
"subsurf_scatter_transmittance_texture"(GDTexture2D)
"texture_filter"(GDTextureFilter)
"texture_repeat"(GDbool)
"transparency"(GDTransparency)
"use_particle_trails"(GDbool)
"use_point_size"(GDbool)
"uv1_offset"(GDVector3)
"uv1_scale"(GDVector3)
"uv1_triplanar"(GDbool)
"uv1_triplanar_sharpness"(GDfloat)
"uv1_world_triplanar"(GDbool)
"uv2_offset"(GDVector3)
"uv2_scale"(GDVector3)
"uv2_triplanar"(GDbool)
"uv2_triplanar_sharpness"(GDfloat)
"uv2_world_triplanar"(GDbool)
"vertex_color_is_srgb"(GDbool)
"vertex_color_use_as_albedo"(GDbool)
constructor { }

func("get_feature") {
returns(GDbool)
"feature"(GDFeature)
}

func("get_flag") {
returns(GDbool)
"flag"(GDFlags)
}

func("get_texture") {
returns(GDTexture2D)
"param"(GDTextureParam)
}

func("set_feature") {
returns(GDvoid)
"feature"(GDFeature)
"enable"(GDbool)
}

func("set_flag") {
returns(GDvoid)
"flag"(GDFlags)
"enable"(GDbool)
}

func("set_texture") {
returns(GDvoid)
"param"(GDTextureParam)
"texture"(GDTexture2D)
}
}){

}